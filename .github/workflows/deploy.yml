name: Deploy to ConoHa VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build
      env:
        VITE_BASE_URL: https://convert.sho43.xyz

    - name: Create target directory on VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          mkdir -p /var/www/vhosts/convert.sho43.xyz
          rm -rf /var/www/vhosts/convert.sho43.xyz/*

    - name: Deploy files to VPS using rsync
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Create a temporary directory for upload
          mkdir -p /tmp/convert-media-deploy
          
    - name: Upload files via SCP
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        source: "dist/*"
        target: "/tmp/convert-media-deploy/"
        strip_components: 1

    - name: Move files and set permissions
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Move files from temp to final location
          mv /tmp/convert-media-deploy/* /var/www/vhosts/convert.sho43.xyz/
          rm -rf /tmp/convert-media-deploy
          
          # Set permissions
          chown -R www-data:www-data /var/www/vhosts/convert.sho43.xyz/
          chmod -R 755 /var/www/vhosts/convert.sho43.xyz/
          
          # Create nginx config if it doesn't exist
          if [ ! -f /etc/nginx/sites-available/convert.sho43.xyz ]; then
            cat > /etc/nginx/sites-available/convert.sho43.xyz << 'EOF'
          server {
              listen 80;
              listen [::]:80;
              server_name convert.sho43.xyz;
              
              root /var/www/vhosts/convert.sho43.xyz;
              index index.html index.htm;
              
              # Handle SPA routing
              location / {
                  try_files $uri $uri/ /index.html;
              }
              
              # Cache static assets
              location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2)$ {
                  expires 1y;
                  add_header Cache-Control "public, immutable";
              }
              
              # Security headers
              add_header X-Frame-Options "SAMEORIGIN" always;
              add_header X-Content-Type-Options "nosniff" always;
              add_header X-XSS-Protection "1; mode=block" always;
          }
          EOF
            ln -sf /etc/nginx/sites-available/convert.sho43.xyz /etc/nginx/sites-enabled/
            nginx -t && systemctl reload nginx
          fi